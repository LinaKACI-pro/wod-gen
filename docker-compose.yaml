services:
  pgsql:
    image: postgres:latest
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ${PWD}/db/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: build/Dockerfile
    image: wod-gen:local
    ports:
      - "8080:8080"
    environment:
      PORT: ${PORT}
      RATE_LIMITER_BURST: ${RATE_LIMITER_BURST}
      RATE_LIMITER_REQUESTS_PER_SECOND: ${RATE_LIMITER_REQUESTS_PER_SECOND}
      RATE_LIMITER_STRATEGY: ${RATE_LIMITER_STRATEGY}
      RATE_LIMITER_ENABLED: ${RATE_LIMITER_ENABLED}
      AUTH_JWT_SECRET: ${AUTH_JWT_SECRET}
      OTEL_EXPORTER_OTLP_ENDPOINT: ${OTEL_EXPORTER_OTLP_ENDPOINT}
      GRAFANA_CLOUD_TOKEN: ${GRAFANA_CLOUD_TOKEN}
      ENV: ${ENV}
      OBS_ENABLED: ${OBS_ENABLED}
    depends_on:
      pgsql:
        condition: service_healthy
